Command to build DB classes via EntityFramework:

Works:
dotnet ef dbcontext scaffold "server=tcp:Geckoserver;Data Source=GECKOSERVER\SQLEXPRESSBT;Initial Catalog=booktrak_booktrakker; Integrated Security=True; Persist Security Info=True;User ID=BT_Mgr;Password=Stimpasaurus64#4;Encrypt=False;TrustServerCertificate=True; MultipleActiveResultSets=True" Microsoft.EntityFrameworkCore.SqlServer --context-dir Data -o Models/Db -d --context-namespace BTOnlineBlazor.Data -n BTOnlineBlazor.Models -c BtDbContext -f


Note:  In order to allow Re-Scaffolding of the DB Entities I must use Partial Classes.  This allows me to split the class into the part generated by
the Scaffolding and the part I need for my code.

Might not work:
Scaffold-DbContext "Data Source=GECKOSERVER\GECKOSERVER;Initial Catalog=booktrak_booktrakker;Persist Security Info=True;User ID=BT_Mgr;Password=Stimpasaurus64#4;TrustServerCertificate=True" Microsoft.EntityFrameworkCore.SqlServer -ContextDir Data -OutputDir Models/Db -DataAnnotation -ContextNamespace BTOnlineBlazor.Data -o BTOnlineBlazor.Models


Notes:  Remember to deal with Apps, which needs to become AppItems (Class Name)
App becomes AppItem, and then there are a number of classes that need updating:

 public virtual DbSet<AppItem> Apps { get; set; }  (Change <App> to <AppItem>)
AppLevel
AppDescription
InstalledApps
SubscriptionRates
